---
interface Props {
  textLinks?: { label: string; href: string }[];
}

const { textLinks } = Astro.props;
---

<div class="anchor-links">
  {
    textLinks &&
      textLinks.map(({ label, href }) => (
        <div class="anchor-link">
          <a
            aria-current={Astro.url.pathname === href}
            class:list={[
              "link",
              {
                active:
                  Astro.url.pathname === href ||
                  (href !== "/" && Astro.url.pathname.startsWith(href)),
              },
            ]}
            href={href}
          >
            {label}
          </a>
        </div>
      ))
  }

  <style>
    .anchor-links {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      list-style: none;
      font-size: var(--text-md);
    }

    .link {
      text-decoration: none;
      color: var(--gray-200);
    }

    @media (min-width: 50em) {
      .anchor-links {
        font-size: var(--text-sm);
      }

      .anchor-links {
        flex-direction: row;
        border-radius: 999rem;
        border: 0;
        padding: 0.9rem 0.56rem;
        background: var(--anchor-links-bg);
        box-shadow: var(--shadow-sm);
      }

      .link {
        padding: 0.5rem 1rem;
        border-radius: 999rem;
        color: var(--gray-300);
        transition:
          color var(--theme-transition),
          background-color var(--theme-transition);
      }

      .link:hover,
      .link:focus {
        color: var(--gray-100);
        background-color: var(--accent-subtle-overlay);
      }

      .link.active {
        color: var(--accent-text-over);
        background-color: var(--accent-regular);
      }
    }

    @media (min-width: 84rem) {
      /* TODO: Add nav-items back in */
      .anchor-links {
        font-size: var(--text-md);
        padding: 0.9rem 0.96rem;
      }
    }
  </style>
</div>
